buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.50"
    }
}

allprojects {
    apply plugin: 'jacoco'
    apply plugin: 'kotlin'

    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        testCompile 'junit:junit:4.12'
    }

    jacoco {
        toolVersion = '0.8.5-SNAPSHOT'
    }
}

task report1(type: JacocoReport) {
    dependsOn subprojects.test, subprojects.jacocoTestReport
    additionalSourceDirs = files(subprojects.sourceSets.main.allSource.srcDirs)
    sourceDirectories = files(subprojects.sourceSets.main.allSource.srcDirs)
    classDirectories = files(subprojects.sourceSets.main.output)
    executionData = files(subprojects.jacocoTestReport.executionData)
    reports {
        html.destination = file("${buildDir}/report1")
    }
}



configurations {
    jacocoAnt
}
dependencies {
    jacocoAnt group: 'org.jacoco', name: 'org.jacoco.ant', version: '0.8.5-SNAPSHOT', classifier: 'nodeps'
}
task report2 {
    dependsOn subprojects.test, subprojects.jacocoTestReport
    doLast {
        ant.taskdef(
            name: 'report',
            classname: 'org.jacoco.ant.ReportTask',
            classpath: configurations.jacocoAnt.asPath
        )
        ant.report() {
            executionData {
                subprojects.jacocoTestReport.executionData
                    .each { it.addToAntBuilder(ant, "resources") }
            }
            structure(name: 'Report') {
                subprojects.each { s ->
                    group(name: 'project ' + s.name) {
                        classfiles {
                            s.sourceSets.main.output
                                .findAll{ it.exists() }
                                .each{ fileset(dir: it) }
                        }
                        sourcefiles {
                            s.sourceSets.main.allSource.srcDirs
                                .findAll{ it.exists() }
                                .each{ fileset(dir: it) }
                        }
                    }
                }
            }
            html(destdir: file("${buildDir}/report2"))
        }
    }
}
