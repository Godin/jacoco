jobs:
- job:
  strategy:
    matrix:
      JDK 17:
        JDK_VERSION: 17
  pool:
    vmImage: 'ubuntu-18.04'
  steps:
  - bash: |
      set -e
      url_var=JDK${JDK_VERSION}_URL
      JDK_URL=${!url_var}
      mkdir .jdk
      curl -L $JDK_URL -o .jdk/jdk.tar.gz
      tar -xzf .jdk/jdk.tar.gz -C .jdk --strip-components 1
      .jdk/bin/java -version
      echo "
      <toolchains>
        <toolchain>
          <type>jdk</type>
          <provides>
            <id>$JDK_VERSION</id>
            <version>$JDK_VERSION</version>
          </provides>
          <configuration>
            <jdkHome>$PWD/.jdk</jdkHome>
          </configuration>
        </toolchain>
      </toolchains>
      " > toolchains.xml
    displayName: Setup JDK
  - bash: |
      if [[ "$JDK_VERSION" -ge "8" ]]; then
        export JAVA_HOME=$PWD/.jdk
      fi
      if [[ "$BUILD_SOURCEBRANCH" == "refs/heads/master" && "$JDK_VERSION" == "5" ]]; then
        mvn -V -B -e -f org.jacoco.build \
          verify -Djdk.version=$JDK_VERSION \
          sonar:sonar deploy:deploy -DdeployAtEnd \
          --toolchains=toolchains.xml --settings=.azure-pipelines/maven-settings.xml
      elif [[ "$JDK_VERSION" == "5" ]]; then
        mvn -V -B -e \
          verify -Djdk.version=$JDK_VERSION \
          --toolchains=toolchains.xml
      else
        mvn -V -B -e \
          verify -Djdk.version=$JDK_VERSION -Dbytecode.version=$JDK_VERSION -Decj=${ECJ:-} \
          --toolchains=toolchains.xml
      fi
    displayName: Build
    env:
      SONARQUBE_TOKEN: $(SONARQUBE_TOKEN)
      SONATYPE_USERNAME: $(SONATYPE_USERNAME)
      SONATYPE_PASSWORD: $(SONATYPE_PASSWORD)
